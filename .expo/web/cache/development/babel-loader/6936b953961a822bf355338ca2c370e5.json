{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\n\nvar AnimatedEllipsis = function (_Component) {\n  _inherits(AnimatedEllipsis, _Component);\n\n  var _super = _createSuper(AnimatedEllipsis);\n\n  function AnimatedEllipsis(props) {\n    var _this;\n\n    _classCallCheck(this, AnimatedEllipsis);\n\n    _this = _super.call(this, props);\n    _this._animation_state = {\n      dot_opacities: _this.initializeDots(),\n      target_opacity: 1,\n      should_animate: true\n    };\n    return _this;\n  }\n\n  _createClass(AnimatedEllipsis, [{\n    key: \"initializeDots\",\n    value: function initializeDots() {\n      var opacities = [];\n\n      for (var i = 0; i < this.props.numberOfDots; i++) {\n        var dot = new Animated.Value(this.props.minOpacity);\n        opacities.push(dot);\n      }\n\n      return opacities;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate_dots.bind(this)(0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._animation_state.should_animate = false;\n    }\n  }, {\n    key: \"animate_dots\",\n    value: function animate_dots(which_dot) {\n      if (!this._animation_state.should_animate) return;\n\n      if (which_dot >= this._animation_state.dot_opacities.length) {\n        which_dot = 0;\n        var min = this.props.minOpacity;\n        this._animation_state.target_opacity = this._animation_state.target_opacity == min ? 1 : min;\n      }\n\n      var next_dot = which_dot + 1;\n      Animated.timing(this._animation_state.dot_opacities[which_dot], {\n        toValue: this._animation_state.target_opacity,\n        duration: this.props.animationDelay,\n        useNativeDriver: true\n      }).start(this.animate_dots.bind(this, next_dot));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dots = this._animation_state.dot_opacities.map(function (o, i) {\n        return React.createElement(Animated.Text, {\n          key: i,\n          style: [_this2.props.style, {\n            opacity: o\n          }]\n        }, ' ', '.');\n      });\n\n      return React.createElement(View, {\n        style: styles.container\n      }, dots);\n    }\n  }]);\n\n  return AnimatedEllipsis;\n}(Component);\n\nexport { AnimatedEllipsis as default };\nAnimatedEllipsis.propTypes = {\n  numberOfDots: PropTypes.number,\n  animationDelay: PropTypes.number,\n  minOpacity: PropTypes.number,\n  style: Text.propTypes.style\n};\nAnimatedEllipsis.defaultProps = {\n  numberOfDots: 3,\n  animationDelay: 300,\n  minOpacity: 0,\n  style: {\n    color: '#aaa',\n    fontSize: 32\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Volumes/Extreme SSD/Làm việc/Mobile App/tuyensinhedu - ios/node_modules/react-native-animated-ellipsis/dist/AnimatedEllipsis.js"],"names":["React","Component","PropTypes","AnimatedEllipsis","props","_animation_state","dot_opacities","initializeDots","target_opacity","should_animate","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animate_dots","bind","which_dot","length","min","next_dot","timing","toValue","duration","animationDelay","useNativeDriver","start","dots","map","o","createElement","Text","key","style","opacity","View","styles","container","propTypes","number","defaultProps","color","fontSize","StyleSheet","create","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, Animated, View, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport default class AnimatedEllipsis extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this._animation_state = {\n      dot_opacities: this.initializeDots(),\n      target_opacity: 1,\n      should_animate: true\n    };\n  }\n\n  initializeDots() {\n    let opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      let dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  componentDidMount() {\n    this.animate_dots.bind(this)(0);\n  }\n\n  componentWillUnmount() {\n    this._animation_state.should_animate = false;\n  }\n\n  animate_dots(which_dot) {\n    if (!this._animation_state.should_animate) return;\n\n    // swap fade direction when we hit end of list\n    if (which_dot >= this._animation_state.dot_opacities.length) {\n      which_dot = 0;\n      let min = this.props.minOpacity;\n      this._animation_state.target_opacity = this._animation_state.target_opacity == min ? 1 : min;\n    }\n\n    let next_dot = which_dot + 1;\n\n    Animated.timing(this._animation_state.dot_opacities[which_dot], {\n      toValue: this._animation_state.target_opacity,\n      duration: this.props.animationDelay,\n      useNativeDriver: true\n    }).start(this.animate_dots.bind(this, next_dot));\n  }\n\n  render() {\n    let dots = this._animation_state.dot_opacities.map((o, i) => React.createElement(\n      Animated.Text,\n      { key: i, style: [this.props.style, { opacity: o }] },\n      ' ',\n      '.'\n    ));\n\n    return React.createElement(\n      View,\n      { style: styles.container },\n      dots\n    );\n  }\n}\n\nAnimatedEllipsis.propTypes = {\n  numberOfDots: PropTypes.number,\n  animationDelay: PropTypes.number,\n  minOpacity: PropTypes.number,\n  style: Text.propTypes.style\n};\nAnimatedEllipsis.defaultProps = {\n  numberOfDots: 3,\n  animationDelay: 300,\n  minOpacity: 0,\n  style: {\n    color: '#aaa',\n    fontSize: 32\n  }\n};\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  }\n});"]},"metadata":{},"sourceType":"module"}