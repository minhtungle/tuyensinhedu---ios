{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Extreme SSD/La\\u0300m vie\\u0323\\u0302c/Mobile App/tuyensinhedu - ios/node_modules/expo-images-picker/src/AssetsSelectorList.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4;\n\nimport React, { memo } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styled from 'styled-components/native';\n\nvar Item = function Item(_ref) {\n  var id = _ref.id,\n      screen = _ref.screen,\n      cols = _ref.cols,\n      selectedIndex = _ref.selectedIndex,\n      image = _ref.image,\n      mediaType = _ref.mediaType,\n      onClick = _ref.onClick,\n      margin = _ref.margin,\n      selectedIcon = _ref.selectedIcon,\n      videoIcon = _ref.videoIcon;\n\n  var handleClick = function handleClick() {\n    onClick(id);\n  };\n\n  var Component = selectedIcon.Component,\n      color = selectedIcon.color,\n      iconName = selectedIcon.iconName,\n      size = selectedIcon.size,\n      bg = selectedIcon.bg;\n  var VideoIndicator = videoIcon.Component,\n      VideoIndicatorColor = videoIcon.color,\n      VideoIndicatorName = videoIcon.iconName,\n      VideoIndicatorSize = videoIcon.size;\n  return React.createElement(Block, {\n    margin: margin,\n    screen: screen,\n    cols: cols,\n    onPress: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, mediaType === 'video' && React.createElement(MediaTypeVideo, {\n    margin: margin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, VideoIndicator && VideoIndicatorName && React.createElement(VideoIndicator, {\n    name: VideoIndicatorName,\n    size: VideoIndicatorSize,\n    color: VideoIndicatorColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), selectedIndex >= 0 && React.createElement(Selected, {\n    selectionColor: bg,\n    margin: margin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, Component && React.createElement(Component, {\n    name: iconName,\n    size: size,\n    color: color,\n    index: selectedIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MemoizedAssetItem = memo(Item);\nexport var AssetsSelectorList = function AssetsSelectorList(_ref2) {\n  var margin = _ref2.margin,\n      data = _ref2.data,\n      selectedItems = _ref2.selectedItems,\n      onClick = _ref2.onClick,\n      getMoreAssets = _ref2.getMoreAssets,\n      cols = _ref2.cols,\n      screen = _ref2.screen,\n      selectedIcon = _ref2.selectedIcon,\n      videoIcon = _ref2.videoIcon,\n      noAssets = _ref2.noAssets;\n\n  var _renderItem = function _renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(MemoizedAssetItem, {\n      id: item.id,\n      image: item.uri,\n      mediaType: item.mediaType,\n      selectedIndex: selectedItems.indexOf(item.id),\n      onClick: onClick,\n      cols: cols,\n      screen: screen,\n      margin: margin,\n      selectedIcon: selectedIcon,\n      videoIcon: videoIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var _getItemLayout = function _getItemLayout(data, index) {\n    var length = screen / cols;\n    return {\n      length: length,\n      offset: length * index,\n      index: index\n    };\n  };\n\n  return React.createElement(FlatList, {\n    data: data,\n    numColumns: cols,\n    initialNumToRender: 50,\n    getItemLayout: _getItemLayout,\n    renderItem: _renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedItems,\n    onEndReached: function onEndReached() {\n      return getMoreAssets();\n    },\n    onEndReachedThreshold: 0.5,\n    ListEmptyComponent: noAssets,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  });\n};\nvar Image = styled.Image(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    width: 100%;\\n    height: 100%;\\n\"])));\nvar MediaTypeVideo = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    width: 25%;\\n    justify-content: center;\\n    align-items: center;\\n    height: 25%;\\n    position: absolute;\\n    z-index: 11;\\n    margin: \", \"px;\\n\"])), function (_ref4) {\n  var margin = _ref4.margin;\n  return margin;\n});\nvar Selected = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    position: absolute;\\n    justify-content: center;\\n    align-items: center;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 10;\\n    background-color: \", \";\\n    margin: \", \"px;\\n\"])), function (_ref5) {\n  var selectionColor = _ref5.selectionColor;\n  return selectionColor ? selectionColor : '#8bc34a70';\n}, function (_ref6) {\n  var margin = _ref6.margin;\n  return margin;\n});\nvar Block = styled.TouchableOpacity(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n    width: \", \"px;\\n    height: \", \"px;\\n    padding: \", \"px;\\n\"])), function (_ref7) {\n  var screen = _ref7.screen,\n      cols = _ref7.cols;\n  return screen / cols;\n}, function (_ref8) {\n  var screen = _ref8.screen,\n      cols = _ref8.cols;\n  return screen / cols;\n}, function (_ref9) {\n  var margin = _ref9.margin;\n  return margin;\n});","map":{"version":3,"sources":["/Volumes/Extreme SSD/Làm việc/Mobile App/tuyensinhedu - ios/node_modules/expo-images-picker/src/AssetsSelectorList.tsx"],"names":["React","memo","styled","Item","id","screen","cols","selectedIndex","image","mediaType","onClick","margin","selectedIcon","videoIcon","handleClick","Component","color","iconName","size","bg","VideoIndicator","VideoIndicatorColor","VideoIndicatorName","VideoIndicatorSize","uri","MemoizedAssetItem","AssetsSelectorList","data","selectedItems","getMoreAssets","noAssets","_renderItem","item","indexOf","_getItemLayout","index","length","offset","Image","MediaTypeVideo","View","Selected","selectionColor","Block","TouchableOpacity"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\r\nimport { FlatList } from 'react-native'\r\nimport { Asset } from 'expo-media-library'\r\nimport styled from 'styled-components/native'\r\nimport { IComponentItem, IComponentItems } from './AssetsSelectorTypes'\r\n\r\nconst Item = ({\r\n    id,\r\n    screen,\r\n    cols,\r\n    selectedIndex,\r\n    image,\r\n    mediaType,\r\n    onClick,\r\n    margin,\r\n    selectedIcon,\r\n    videoIcon,\r\n}: IComponentItem) => {\r\n    const handleClick = () => {\r\n        onClick(id)\r\n    }\r\n\r\n    const { Component, color, iconName, size, bg } = selectedIcon\r\n\r\n    const {\r\n        Component: VideoIndicator,\r\n        color: VideoIndicatorColor,\r\n        iconName: VideoIndicatorName,\r\n        size: VideoIndicatorSize,\r\n    } = videoIcon\r\n\r\n    return (\r\n        <Block\r\n            margin={margin}\r\n            screen={screen}\r\n            cols={cols}\r\n            onPress={handleClick}\r\n        >\r\n            {mediaType === 'video' && (\r\n                <MediaTypeVideo margin={margin}>\r\n                    {VideoIndicator && VideoIndicatorName && (\r\n                        <VideoIndicator\r\n                            name={VideoIndicatorName}\r\n                            size={VideoIndicatorSize}\r\n                            color={VideoIndicatorColor}\r\n                        />\r\n                    )}\r\n                </MediaTypeVideo>\r\n            )}\r\n            {selectedIndex >= 0 && (\r\n                <Selected selectionColor={bg} margin={margin}>\r\n                    {Component && (\r\n                        <Component\r\n                            name={iconName}\r\n                            size={size}\r\n                            color={color}\r\n                            index={selectedIndex}\r\n                        />\r\n                    )}\r\n                </Selected>\r\n            )}\r\n            <Image source={{ uri: image }} />\r\n        </Block>\r\n    )\r\n}\r\n\r\nconst MemoizedAssetItem = memo(Item)\r\n\r\nexport const AssetsSelectorList = ({\r\n    margin,\r\n    data,\r\n    selectedItems,\r\n    onClick,\r\n    getMoreAssets,\r\n    cols,\r\n    screen,\r\n    selectedIcon,\r\n    videoIcon,\r\n    noAssets,\r\n}: IComponentItems) => {\r\n    const _renderItem = ({ item }: { item: Asset }) => (\r\n        <MemoizedAssetItem\r\n            id={item.id}\r\n            image={item.uri}\r\n            mediaType={item.mediaType}\r\n            selectedIndex={selectedItems.indexOf(item.id)}\r\n            onClick={onClick}\r\n            cols={cols}\r\n            screen={screen}\r\n            margin={margin}\r\n            selectedIcon={selectedIcon}\r\n            videoIcon={videoIcon}\r\n        />\r\n    )\r\n\r\n    const _getItemLayout = (\r\n        data: Asset[] | null | undefined,\r\n        index: number\r\n    ) => {\r\n        let length = screen / cols\r\n        return { length, offset: length * index, index }\r\n    }\r\n\r\n    return (\r\n        <FlatList\r\n            data={data}\r\n            numColumns={cols}\r\n            initialNumToRender={50}\r\n            getItemLayout={_getItemLayout}\r\n            renderItem={_renderItem}\r\n            keyExtractor={(item) => item.id}\r\n            extraData={selectedItems}\r\n            onEndReached={() => getMoreAssets()}\r\n            onEndReachedThreshold={0.5}\r\n            ListEmptyComponent={noAssets}\r\n        />\r\n    )\r\n}\r\n\r\nconst Image = styled.Image`\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\n\r\nconst MediaTypeVideo = styled.View<{ margin: number }>`\r\n    width: 25%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 25%;\r\n    position: absolute;\r\n    z-index: 11;\r\n    margin: ${({ margin }) => margin}px;\r\n`\r\nconst Selected = styled.View<{ margin: number; selectionColor: string }>`\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 10;\r\n    background-color: ${({ selectionColor }) =>\r\n        selectionColor ? selectionColor : '#8bc34a70'};\r\n    margin: ${({ margin }) => margin}px;\r\n`\r\n\r\nconst Block = styled.TouchableOpacity<{\r\n    margin: number\r\n    screen: number\r\n    cols: number\r\n}>`\r\n    width: ${({ screen, cols }) => screen / cols}px;\r\n    height: ${({ screen, cols }) => screen / cols}px;\r\n    padding: ${({ margin }) => margin}px;\r\n`\r\n"]},"metadata":{},"sourceType":"module"}