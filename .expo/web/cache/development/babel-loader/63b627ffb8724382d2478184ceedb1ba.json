{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Extreme SSD/La\\u0300m vie\\u0323\\u0302c/Mobile App/tuyensinhedu - ios/node_modules/expo-images-picker/src/AssetsSelector.tsx\",\n    _templateObject,\n    _templateObject2;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styled from 'styled-components/native';\nimport * as MediaLibrary from 'expo-media-library';\nimport { getAssetsAsync } from 'expo-media-library';\nimport { AssetsSelectorList } from \"./AssetsSelectorList\";\nimport { DefaultTopNavigator } from \"./DefaultTopNavigator\";\nimport * as ImageManipulator from 'expo-image-manipulator';\n\nvar AssetsSelector = function AssetsSelector(_ref) {\n  var options = _ref.options;\n  var manipulate = options.manipulate,\n      assetsType = options.assetsType,\n      maxSelections = options.maxSelections,\n      margin = options.margin,\n      portraitCols = options.portraitCols,\n      landscapeCols = options.landscapeCols,\n      widgetWidth = options.widgetWidth,\n      widgetBgColor = options.widgetBgColor,\n      videoIcon = options.videoIcon,\n      selectedIcon = options.selectedIcon,\n      spinnerColor = options.spinnerColor,\n      defaultTopNavigator = options.defaultTopNavigator,\n      CustomTopNavigator = options.CustomTopNavigator,\n      noAssets = options.noAssets,\n      onError = options.onError;\n\n  var getScreen = function getScreen() {\n    return Dimensions.get('screen');\n  };\n\n  var _useMemo = useMemo(function () {\n    return getScreen();\n  }, []),\n      width = _useMemo.width,\n      height = _useMemo.height;\n\n  var COLUMNS = height >= width ? portraitCols : landscapeCols;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItems = _useState2[0],\n      setSelectedItems = _useState2[1];\n\n  var _useState3 = useState({\n    hasMediaLibraryPermission: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      permissions = _useState4[0],\n      setPermissions = _useState4[1];\n\n  var _useState5 = useState({\n    first: 500,\n    totalCount: 0,\n    after: '',\n    endCursor: '',\n    hasNextPage: true\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availableOptions = _useState6[0],\n      setAvailableOptions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      assetItems = _useState8[0],\n      setItems = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var loadAssets = useCallback(function (params) {\n    getAssetsAsync(params).then(function (_ref2) {\n      var endCursor = _ref2.endCursor,\n          assets = _ref2.assets,\n          hasNextPage = _ref2.hasNextPage;\n      if (availableOptions.after === endCursor) return;\n      var newAssets = assets;\n      setAvailableOptions(_objectSpread(_objectSpread({}, availableOptions), {}, {\n        after: endCursor,\n        hasNextPage: hasNextPage\n      }));\n      return setItems([].concat(_toConsumableArray(assetItems), _toConsumableArray(newAssets)));\n    }).catch(function (err) {\n      return onError && onError(err);\n    });\n  }, [assetItems]);\n  var getMediaLibraryPermission = useCallback(function _callee() {\n    var _await$MediaLibrary$r, MEDIA_LIBRARY;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync());\n\n          case 2:\n            _await$MediaLibrary$r = _context.sent;\n            MEDIA_LIBRARY = _await$MediaLibrary$r.status;\n            setPermissions({\n              hasMediaLibraryPermission: MEDIA_LIBRARY === 'granted'\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var onClickUseCallBack = useCallback(function (id) {\n    setSelectedItems(function (selectedItems) {\n      var alreadySelected = selectedItems.indexOf(id) >= 0;\n      if (selectedItems.length >= maxSelections && !alreadySelected) return selectedItems;\n      if (alreadySelected) return selectedItems.filter(function (item) {\n        return item !== id;\n      });else return [].concat(_toConsumableArray(selectedItems), [id]);\n    });\n  }, []);\n  useEffect(function () {\n    getAssets();\n  }, [assetsType, permissions.hasMediaLibraryPermission]);\n\n  var getAssets = function getAssets() {\n    try {\n      if (availableOptions.hasNextPage) {\n        var params = {\n          first: 200,\n          mediaType: assetsType,\n          sortBy: ['creationTime']\n        };\n        if (availableOptions.after) params.after = availableOptions.after;\n        if (!availableOptions.hasNextPage) return;\n        return permissions.hasMediaLibraryPermission ? loadAssets(params) : getMediaLibraryPermission();\n      }\n    } catch (err) {}\n  };\n\n  var resizeImages = function resizeImages(image, manipulate) {\n    var base64, width, height, saveTo, compress, saveFormat, sizeOptions, options, format;\n    return _regeneratorRuntime.async(function resizeImages$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            base64 = manipulate.base64, width = manipulate.width, height = manipulate.height, saveTo = manipulate.saveTo, compress = manipulate.compress;\n            saveFormat = saveTo === 'jpeg' ? ImageManipulator.SaveFormat.JPEG : ImageManipulator.SaveFormat.PNG;\n            sizeOptions = {};\n\n            if (width && !height) {\n              sizeOptions.width = width;\n            }\n\n            if (height && !width) {\n              sizeOptions.height = height;\n            }\n\n            if (width && height) {\n              sizeOptions.width = width;\n              sizeOptions.height = height;\n            }\n\n            if (!width && !height) {\n              sizeOptions.width = image.width;\n              sizeOptions.height = image.height;\n            }\n\n            options = [{\n              resize: sizeOptions\n            }];\n            format = {\n              base64: base64,\n              compress: compress,\n              format: saveFormat\n            };\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, options, format));\n\n          case 11:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var prepareResponse = useCallback(function () {\n    return assetItems.filter(function (asset) {\n      return selectedItems.indexOf(asset.id) !== -1;\n    }).sort(function (a, b) {\n      return selectedItems.indexOf(a.id) - selectedItems.indexOf(b.id);\n    });\n  }, [selectedItems]);\n\n  var manipulateResults = function manipulateResults(source) {\n    var selectedAssets, modAssets;\n    return _regeneratorRuntime.async(function manipulateResults$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setLoading(true);\n            selectedAssets = prepareResponse();\n            _context4.prev = 2;\n\n            if (!manipulate) {\n              _context4.next = 8;\n              break;\n            }\n\n            modAssets = [];\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(asyncForEach(selectedAssets, function _callee2(asset) {\n              var resizedImage;\n              return _regeneratorRuntime.async(function _callee2$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      if (!(asset.mediaType === 'photo')) {\n                        _context3.next = 7;\n                        break;\n                      }\n\n                      _context3.next = 3;\n                      return _regeneratorRuntime.awrap(resizeImages(asset, manipulate));\n\n                    case 3:\n                      resizedImage = _context3.sent;\n                      modAssets.push(resizedImage);\n                      _context3.next = 8;\n                      break;\n\n                    case 7:\n                      modAssets.push(asset);\n\n                    case 8:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 7:\n            return _context4.abrupt(\"return\", responseWithResults(source, modAssets));\n\n          case 8:\n            return _context4.abrupt(\"return\", responseWithResults(source, selectedAssets));\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](2);\n            return _context4.abrupt(\"return\", responseWithResults(source, selectedAssets));\n\n          case 14:\n            _context4.prev = 14;\n            setLoading(false);\n            return _context4.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 11, 14, 17]], Promise);\n  };\n\n  var responseWithResults = function responseWithResults(navigation, assets) {\n    var _default = navigation === 'default';\n\n    return _default ? defaultTopNavigator == null ? void 0 : defaultTopNavigator.doneFunction(assets) : CustomTopNavigator == null ? void 0 : CustomTopNavigator.props.doneFunction(assets);\n  };\n\n  return React.createElement(Screen, {\n    bgColor: widgetBgColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, CustomTopNavigator && CustomTopNavigator.Component && React.createElement(CustomTopNavigator.Component, _extends({}, CustomTopNavigator.props, {\n    onFinish: function onFinish() {\n      return manipulateResults('custom');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  })), defaultTopNavigator && React.createElement(DefaultTopNavigator, {\n    selectedText: defaultTopNavigator.selectedText,\n    buttonTextStyle: defaultTopNavigator.buttonTextStyle,\n    buttonStyle: defaultTopNavigator.buttonStyle,\n    midTextColor: defaultTopNavigator.midTextColor || 'black',\n    backText: defaultTopNavigator.goBackText,\n    finishText: defaultTopNavigator.continueText,\n    selected: selectedItems.length,\n    backFunction: function backFunction() {\n      return defaultTopNavigator.backFunction();\n    },\n    onFinish: function onFinish() {\n      return manipulateResults('default');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), isLoading ? React.createElement(Spinner, {\n    color: spinnerColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }) : React.createElement(Widget, {\n    widgetWidth: widgetWidth,\n    bgColor: widgetBgColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, React.createElement(AssetsSelectorList, {\n    cols: COLUMNS,\n    margin: margin,\n    data: assetItems,\n    getMoreAssets: getAssets,\n    onClick: onClickUseCallBack,\n    selectedItems: selectedItems,\n    screen: width * widgetWidth / 100,\n    selectedIcon: selectedIcon,\n    videoIcon: videoIcon,\n    noAssets: noAssets,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  })));\n};\n\nfunction asyncForEach(array, callback) {\n  var index;\n  return _regeneratorRuntime.async(function asyncForEach$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          index = 0;\n\n        case 1:\n          if (!(index < array.length)) {\n            _context5.next = 7;\n            break;\n          }\n\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(callback(array[index], index, array));\n\n        case 4:\n          index++;\n          _context5.next = 1;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar SpinnerStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  }\n});\n\nvar Spinner = function Spinner(_ref3) {\n  var color = _ref3.color;\n  return React.createElement(View, {\n    style: [SpinnerStyle.container, SpinnerStyle.horizontal],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar Screen = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    background-color: \", \";\\n    flex: 1;\\n\"])), function (_ref4) {\n  var bgColor = _ref4.bgColor;\n  return bgColor;\n});\nvar Widget = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    margin: 0 auto;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    background-color: \", \";\\n    width: \", \"%;\\n    flex: 1;\\n\"])), function (_ref5) {\n  var bgColor = _ref5.bgColor;\n  return bgColor;\n}, function (_ref6) {\n  var widgetWidth = _ref6.widgetWidth;\n  return widgetWidth || 100;\n});\nexport default AssetsSelector;","map":{"version":3,"sources":["/Volumes/Extreme SSD/Làm việc/Mobile App/tuyensinhedu - ios/node_modules/expo-images-picker/src/AssetsSelector.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","styled","MediaLibrary","getAssetsAsync","AssetsSelectorList","DefaultTopNavigator","ImageManipulator","AssetsSelector","options","manipulate","assetsType","maxSelections","margin","portraitCols","landscapeCols","widgetWidth","widgetBgColor","videoIcon","selectedIcon","spinnerColor","defaultTopNavigator","CustomTopNavigator","noAssets","onError","getScreen","Dimensions","get","width","height","COLUMNS","selectedItems","setSelectedItems","hasMediaLibraryPermission","permissions","setPermissions","first","totalCount","after","endCursor","hasNextPage","availableOptions","setAvailableOptions","assetItems","setItems","isLoading","setLoading","loadAssets","params","then","assets","newAssets","catch","err","getMediaLibraryPermission","requestPermissionsAsync","MEDIA_LIBRARY","status","onClickUseCallBack","id","alreadySelected","indexOf","length","filter","item","getAssets","mediaType","sortBy","resizeImages","image","base64","saveTo","compress","saveFormat","SaveFormat","JPEG","PNG","sizeOptions","resize","format","manipulateAsync","uri","prepareResponse","asset","sort","a","b","manipulateResults","source","selectedAssets","modAssets","asyncForEach","resizedImage","push","responseWithResults","navigation","_default","doneFunction","props","Component","selectedText","buttonTextStyle","buttonStyle","midTextColor","goBackText","continueText","backFunction","array","callback","index","SpinnerStyle","StyleSheet","create","container","flex","justifyContent","horizontal","flexDirection","padding","Spinner","color","Screen","View","bgColor","Widget"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,QAArD,QAAqE,OAArE;;;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAA+BC,cAA/B,QAAqD,oBAArD;AACA,SAASC,kBAAT;AACA,SAASC,mBAAT;AACA,OAAO,KAAKC,gBAAZ,MAAkC,wBAAlC;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAmD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AACtE,MACIC,UADJ,GAgBID,OAhBJ,CACIC,UADJ;AAAA,MAEIC,UAFJ,GAgBIF,OAhBJ,CAEIE,UAFJ;AAAA,MAGIC,aAHJ,GAgBIH,OAhBJ,CAGIG,aAHJ;AAAA,MAIIC,MAJJ,GAgBIJ,OAhBJ,CAIII,MAJJ;AAAA,MAKIC,YALJ,GAgBIL,OAhBJ,CAKIK,YALJ;AAAA,MAMIC,aANJ,GAgBIN,OAhBJ,CAMIM,aANJ;AAAA,MAOIC,WAPJ,GAgBIP,OAhBJ,CAOIO,WAPJ;AAAA,MAQIC,aARJ,GAgBIR,OAhBJ,CAQIQ,aARJ;AAAA,MASIC,SATJ,GAgBIT,OAhBJ,CASIS,SATJ;AAAA,MAUIC,YAVJ,GAgBIV,OAhBJ,CAUIU,YAVJ;AAAA,MAWIC,YAXJ,GAgBIX,OAhBJ,CAWIW,YAXJ;AAAA,MAYIC,mBAZJ,GAgBIZ,OAhBJ,CAYIY,mBAZJ;AAAA,MAaIC,kBAbJ,GAgBIb,OAhBJ,CAaIa,kBAbJ;AAAA,MAcIC,QAdJ,GAgBId,OAhBJ,CAcIc,QAdJ;AAAA,MAeIC,OAfJ,GAgBIf,OAhBJ,CAeIe,OAfJ;;AAkBA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAN;AAAA,GAAlB;;AAEA,iBAA0B3B,OAAO,CAAC;AAAA,WAAMyB,SAAS,EAAf;AAAA,GAAD,EAAoB,EAApB,CAAjC;AAAA,MAAQG,KAAR,YAAQA,KAAR;AAAA,MAAeC,MAAf,YAAeA,MAAf;;AAEA,MAAMC,OAAO,GAAGD,MAAM,IAAID,KAAV,GAAkBd,YAAlB,GAAiCC,aAAjD;;AAEA,kBAA0Cd,QAAQ,CAAW,EAAX,CAAlD;AAAA;AAAA,MAAO8B,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,mBAAsC/B,QAAQ,CAAC;AAC3CgC,IAAAA,yBAAyB,EAAE;AADgB,GAAD,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAIA,mBAAgDlC,QAAQ,CAAY;AAChEmC,IAAAA,KAAK,EAAE,GADyD;AAEhEC,IAAAA,UAAU,EAAE,CAFoD;AAGhEC,IAAAA,KAAK,EAAE,EAHyD;AAIhEC,IAAAA,SAAS,EAAE,EAJqD;AAKhEC,IAAAA,WAAW,EAAE;AALmD,GAAZ,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAQA,mBAA+BzC,QAAQ,CAAU,EAAV,CAAvC;AAAA;AAAA,MAAO0C,UAAP;AAAA,MAAmBC,QAAnB;;AAEA,mBAAgC3C,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO4C,SAAP;AAAA,MAAkBC,UAAlB;;AAIA,MAAMC,UAAU,GAAGjD,WAAW,CAC1B,UAACkD,MAAD,EAA2B;AACvB5C,IAAAA,cAAc,CAAC4C,MAAD,CAAd,CACKC,IADL,CACU,iBAAwC;AAAA,UAArCV,SAAqC,SAArCA,SAAqC;AAAA,UAA1BW,MAA0B,SAA1BA,MAA0B;AAAA,UAAlBV,WAAkB,SAAlBA,WAAkB;AAC1C,UAAIC,gBAAgB,CAACH,KAAjB,KAA2BC,SAA/B,EAA0C;AAC1C,UAAMY,SAAS,GAAGD,MAAlB;AACAR,MAAAA,mBAAmB,iCACZD,gBADY;AAEfH,QAAAA,KAAK,EAAEC,SAFQ;AAGfC,QAAAA,WAAW,EAAEA;AAHE,SAAnB;AAKA,aAAOI,QAAQ,8BAAKD,UAAL,sBAAoBQ,SAApB,GAAf;AACH,KAVL,EAWKC,KAXL,CAWW,UAACC,GAAD;AAAA,aAAS7B,OAAO,IAAIA,OAAO,CAAC6B,GAAD,CAA3B;AAAA,KAXX;AAYH,GAdyB,EAe1B,CAACV,UAAD,CAf0B,CAA9B;AAkBA,MAAMW,yBAAyB,GAAGxD,WAAW,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGK,YAAY,CAACoD,uBAAb,EADH;;AAAA;AAAA;AAC1BC,YAAAA,aAD0B,yBAClCC,MADkC;AAG1CtB,YAAAA,cAAc,CAAC;AACXF,cAAAA,yBAAyB,EAAEuB,aAAa,KAAK;AADlC,aAAD,CAAd;;AAH0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAM1C,EAN0C,CAA7C;AAQA,MAAME,kBAAkB,GAAG5D,WAAW,CAAC,UAAC6D,EAAD,EAAgB;AACnD3B,IAAAA,gBAAgB,CAAC,UAACD,aAAD,EAAmB;AAChC,UAAM6B,eAAe,GAAG7B,aAAa,CAAC8B,OAAd,CAAsBF,EAAtB,KAA6B,CAArD;AACA,UAAI5B,aAAa,CAAC+B,MAAd,IAAwBlD,aAAxB,IAAyC,CAACgD,eAA9C,EACI,OAAO7B,aAAP;AACJ,UAAI6B,eAAJ,EACI,OAAO7B,aAAa,CAACgC,MAAd,CAAqB,UAACC,IAAD;AAAA,eAAUA,IAAI,KAAKL,EAAnB;AAAA,OAArB,CAAP,CADJ,KAEK,oCAAW5B,aAAX,IAA0B4B,EAA1B;AACR,KAPe,CAAhB;AAQH,GATqC,EASnC,EATmC,CAAtC;AAWA5D,EAAAA,SAAS,CAAC,YAAM;AACZkE,IAAAA,SAAS;AACZ,GAFQ,EAEN,CACCtD,UADD,EAECuB,WAAW,CAACD,yBAFb,CAFM,CAAT;;AAOA,MAAMgC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAI;AACA,UAAIxB,gBAAgB,CAACD,WAArB,EAAkC;AAC9B,YAAMQ,MAAqB,GAAG;AAC1BZ,UAAAA,KAAK,EAAE,GADmB;AAE1B8B,UAAAA,SAAS,EAAEvD,UAFe;AAG1BwD,UAAAA,MAAM,EAAE,CAAC,cAAD;AAHkB,SAA9B;AAKA,YAAI1B,gBAAgB,CAACH,KAArB,EACIU,MAAM,CAACV,KAAP,GAAeG,gBAAgB,CAACH,KAAhC;AACJ,YAAI,CAACG,gBAAgB,CAACD,WAAtB,EAAmC;AAEnC,eAAON,WAAW,CAACD,yBAAZ,GACDc,UAAU,CAACC,MAAD,CADT,GAEDM,yBAAyB,EAF/B;AAGH;AACJ,KAfD,CAeE,OAAOD,GAAP,EAAY,CAIb;AACJ,GArBD;;AAuBA,MAAMe,YAAY,GAAG,SAAfA,YAAe,CACjBC,KADiB,EAEjB3D,UAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAIT4D,YAAAA,MAJS,GAImC5D,UAJnC,CAIT4D,MAJS,EAID1C,KAJC,GAImClB,UAJnC,CAIDkB,KAJC,EAIMC,MAJN,GAImCnB,UAJnC,CAIMmB,MAJN,EAIc0C,MAJd,GAImC7D,UAJnC,CAIc6D,MAJd,EAIsBC,QAJtB,GAImC9D,UAJnC,CAIsB8D,QAJtB;AAKXC,YAAAA,UALW,GAMbF,MAAM,KAAK,MAAX,GACMhE,gBAAgB,CAACmE,UAAjB,CAA4BC,IADlC,GAEMpE,gBAAgB,CAACmE,UAAjB,CAA4BE,GARrB;AAUbC,YAAAA,WAVa,GAUM,EAVN;;AAYjB,gBAAIjD,KAAK,IAAI,CAACC,MAAd,EAAsB;AAClBgD,cAAAA,WAAW,CAACjD,KAAZ,GAAoBA,KAApB;AACH;;AAED,gBAAIC,MAAM,IAAI,CAACD,KAAf,EAAsB;AAClBiD,cAAAA,WAAW,CAAChD,MAAZ,GAAqBA,MAArB;AACH;;AAED,gBAAID,KAAK,IAAIC,MAAb,EAAqB;AACjBgD,cAAAA,WAAW,CAACjD,KAAZ,GAAoBA,KAApB;AACAiD,cAAAA,WAAW,CAAChD,MAAZ,GAAqBA,MAArB;AACH;;AAED,gBAAI,CAACD,KAAD,IAAU,CAACC,MAAf,EAAuB;AACnBgD,cAAAA,WAAW,CAACjD,KAAZ,GAAoByC,KAAK,CAACzC,KAA1B;AACAiD,cAAAA,WAAW,CAAChD,MAAZ,GAAqBwC,KAAK,CAACxC,MAA3B;AACH;;AAEKpB,YAAAA,OA9BW,GA8BD,CACZ;AACIqE,cAAAA,MAAM,EAAED;AADZ,aADY,CA9BC;AAmCXE,YAAAA,MAnCW,GAmCF;AACXT,cAAAA,MAAM,EAANA,MADW;AAEXE,cAAAA,QAAQ,EAARA,QAFW;AAGXO,cAAAA,MAAM,EAAEN;AAHG,aAnCE;AAAA;AAAA,6CAyCJlE,gBAAgB,CAACyE,eAAjB,CACTX,KAAK,CAACY,GADG,EAETxE,OAFS,EAGTsE,MAHS,CAzCI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAgDA,MAAMG,eAAe,GAAGpF,WAAW,CAC/B;AAAA,WACI6C,UAAU,CACLoB,MADL,CAEQ,UAACoB,KAAD;AAAA,aACIpD,aAAa,CAAC8B,OAAd,CAAsBsB,KAAK,CAACxB,EAA5B,MAAoC,CAAC,CADzC;AAAA,KAFR,EAKKyB,IALL,CAMQ,UAACC,CAAD,EAAIC,CAAJ;AAAA,aACIvD,aAAa,CAAC8B,OAAd,CAAsBwB,CAAC,CAAC1B,EAAxB,IACA5B,aAAa,CAAC8B,OAAd,CAAsByB,CAAC,CAAC3B,EAAxB,CAFJ;AAAA,KANR,CADJ;AAAA,GAD+B,EAY/B,CAAC5B,aAAD,CAZ+B,CAAnC;;AAeA,MAAMwD,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB1C,YAAAA,UAAU,CAAC,IAAD,CAAV;AACM2C,YAAAA,cAFgB,GAECP,eAAe,EAFhB;AAAA;;AAAA,iBAIdxE,UAJc;AAAA;AAAA;AAAA;;AAKVgF,YAAAA,SALU,GAKkC,EALlC;AAAA;AAAA,6CAMRC,YAAY,CAACF,cAAD,EAAiB,kBAAON,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC3BA,KAAK,CAACjB,SAAN,KAAoB,OADO;AAAA;AAAA;AAAA;;AAAA;AAAA,uDAEAE,YAAY,CACnCe,KADmC,EAEnCzE,UAFmC,CAFZ;;AAAA;AAErBkF,sBAAAA,YAFqB;AAM3BF,sBAAAA,SAAS,CAACG,IAAV,CAAeD,YAAf;AAN2B;AAAA;;AAAA;AAOxBF,sBAAAA,SAAS,CAACG,IAAV,CAAeV,KAAf;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAjB,CANJ;;AAAA;AAAA,8CAePW,mBAAmB,CAACN,MAAD,EAASE,SAAT,CAfZ;;AAAA;AAAA,8CAiBXI,mBAAmB,CAACN,MAAD,EAASC,cAAT,CAjBR;;AAAA;AAAA;AAAA;AAAA,8CAmBXK,mBAAmB,CAACN,MAAD,EAASC,cAAT,CAnBR;;AAAA;AAAA;AAqBlB3C,YAAAA,UAAU,CAAC,KAAD,CAAV;AArBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAyBA,MAAMgD,mBAAmB,GAAG,SAAtBA,mBAAsB,CACxBC,UADwB,EAExB7C,MAFwB,EAGvB;AACD,QAAM8C,QAAQ,GAAGD,UAAU,KAAK,SAAhC;;AACA,WAAOC,QAAQ,GACT3E,mBADS,oBACTA,mBAAmB,CAAE4E,YAArB,CAAkC/C,MAAlC,CADS,GAET5B,kBAFS,oBAETA,kBAAkB,CAAE4E,KAApB,CAA0BD,YAA1B,CAAuC/C,MAAvC,CAFN;AAGH,GARD;;AAUA,SACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEjC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,kBAAkB,IAAIA,kBAAkB,CAAC6E,SAAzC,IACG,oBAAC,kBAAD,CAAoB,SAApB,eACQ7E,kBAAkB,CAAC4E,KAD3B;AAEI,IAAA,QAAQ,EAAE;AAAA,aAAMX,iBAAiB,CAAC,QAAD,CAAvB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFR,EAOKlE,mBAAmB,IAChB,oBAAC,mBAAD;AACI,IAAA,YAAY,EAAEA,mBAAmB,CAAC+E,YADtC;AAEI,IAAA,eAAe,EAAE/E,mBAAmB,CAACgF,eAFzC;AAGI,IAAA,WAAW,EAAEhF,mBAAmB,CAACiF,WAHrC;AAII,IAAA,YAAY,EAAEjF,mBAAmB,CAACkF,YAApB,IAAoC,OAJtD;AAKI,IAAA,QAAQ,EAAElF,mBAAmB,CAACmF,UALlC;AAMI,IAAA,UAAU,EAAEnF,mBAAmB,CAACoF,YANpC;AAOI,IAAA,QAAQ,EAAE1E,aAAa,CAAC+B,MAP5B;AAQI,IAAA,YAAY,EAAE;AAAA,aAAMzC,mBAAmB,CAACqF,YAApB,EAAN;AAAA,KARlB;AASI,IAAA,QAAQ,EAAE;AAAA,aAAMnB,iBAAiB,CAAC,SAAD,CAAvB;AAAA,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR,EAoBK1C,SAAS,GACN,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEzB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEJ,WAArB;AAAkC,IAAA,OAAO,EAAEC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AACI,IAAA,IAAI,EAAEa,OADV;AAEI,IAAA,MAAM,EAAEjB,MAFZ;AAGI,IAAA,IAAI,EAAE8B,UAHV;AAII,IAAA,aAAa,EAAEsB,SAJnB;AAKI,IAAA,OAAO,EAAEP,kBALb;AAMI,IAAA,aAAa,EAAE3B,aANnB;AAOI,IAAA,MAAM,EAAGH,KAAK,GAAGZ,WAAT,GAAwB,GAPpC;AAQI,IAAA,YAAY,EAAEG,YARlB;AASI,IAAA,SAAS,EAAED,SATf;AAUI,IAAA,QAAQ,EAAEK,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBR,CADJ;AAyCH,CA3PD;;AA6PA,SAAeoE,YAAf,CAA4BgB,KAA5B,EAA4CC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AACaC,UAAAA,KADb,GACqB,CADrB;;AAAA;AAAA,gBACwBA,KAAK,GAAGF,KAAK,CAAC7C,MADtC;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEc8C,QAAQ,CAACD,KAAK,CAACE,KAAD,CAAN,EAAeA,KAAf,EAAsBF,KAAtB,CAFtB;;AAAA;AAC8CE,UAAAA,KAAK,EADnD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAMC,YAAY,GAAGC,UAAU,CAACC,MAAX,CAAkB;AACnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADwB;AAKnCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,aAAa,EAAE,KADP;AAERF,IAAAA,cAAc,EAAE,cAFR;AAGRG,IAAAA,OAAO,EAAE;AAHD;AALuB,CAAlB,CAArB;;AAYA,IAAMC,OAA8B,GAAG,SAAjCA,OAAiC,QAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAClD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACV,YAAY,CAACG,SAAd,EAAyBH,YAAY,CAACM,UAAtC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEI,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;;AAQA,IAAMC,MAAM,GAAGvH,MAAM,CAACwH,IAAV,wHACY;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CADZ,CAAZ;AAKA,IAAMC,MAAM,GAAG1H,MAAM,CAACwH,IAAV,iOAIY;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAJZ,EAKC;AAAA,MAAG3G,WAAH,SAAGA,WAAH;AAAA,SAAqBA,WAAW,IAAI,GAApC;AAAA,CALD,CAAZ;AASA,eAAeR,cAAf","sourcesContent":["import React, { FC, useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Dimensions, View, ActivityIndicator, StyleSheet } from 'react-native'\r\nimport styled from 'styled-components/native'\r\nimport * as MediaLibrary from 'expo-media-library'\r\nimport { Asset, AssetsOptions, getAssetsAsync } from 'expo-media-library'\r\nimport { AssetsSelectorList } from './AssetsSelectorList'\r\nimport { DefaultTopNavigator } from './DefaultTopNavigator'\r\nimport * as ImageManipulator from 'expo-image-manipulator'\r\nimport {\r\n    IAssetPickerOptions,\r\n    IScreen,\r\n    IWidget,\r\n    ManipulateOptions,\r\n    PagedInfo,\r\n} from './AssetsSelectorTypes'\r\nimport { ImageResult } from 'expo-image-manipulator'\r\n\r\nconst AssetsSelector = ({ options }: IAssetPickerOptions): JSX.Element => {\r\n    const {\r\n        manipulate,\r\n        assetsType,\r\n        maxSelections,\r\n        margin,\r\n        portraitCols,\r\n        landscapeCols,\r\n        widgetWidth,\r\n        widgetBgColor,\r\n        videoIcon,\r\n        selectedIcon,\r\n        spinnerColor,\r\n        defaultTopNavigator,\r\n        CustomTopNavigator,\r\n        noAssets,\r\n        onError,\r\n    } = options\r\n\r\n    const getScreen = () => Dimensions.get('screen')\r\n\r\n    const { width, height } = useMemo(() => getScreen(), [])\r\n\r\n    const COLUMNS = height >= width ? portraitCols : landscapeCols\r\n\r\n    const [selectedItems, setSelectedItems] = useState<string[]>([])\r\n\r\n    const [permissions, setPermissions] = useState({\r\n        hasMediaLibraryPermission: false,\r\n    })\r\n\r\n    const [availableOptions, setAvailableOptions] = useState<PagedInfo>({\r\n        first: 500,\r\n        totalCount: 0,\r\n        after: '',\r\n        endCursor: '',\r\n        hasNextPage: true,\r\n    })\r\n\r\n    const [assetItems, setItems] = useState<Asset[]>([])\r\n\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    // todo add state for errors and render error msg.\r\n\r\n    const loadAssets = useCallback(\r\n        (params: AssetsOptions) => {\r\n            getAssetsAsync(params)\r\n                .then(({ endCursor, assets, hasNextPage }) => {\r\n                    if (availableOptions.after === endCursor) return\r\n                    const newAssets = assets\r\n                    setAvailableOptions({\r\n                        ...availableOptions,\r\n                        after: endCursor,\r\n                        hasNextPage: hasNextPage,\r\n                    })\r\n                    return setItems([...assetItems, ...newAssets])\r\n                })\r\n                .catch((err) => onError && onError(err))\r\n        },\r\n        [assetItems]\r\n    )\r\n\r\n    const getMediaLibraryPermission = useCallback(async () => {\r\n        const { status: MEDIA_LIBRARY }: any = await MediaLibrary.requestPermissionsAsync()\r\n\r\n        setPermissions({\r\n            hasMediaLibraryPermission: MEDIA_LIBRARY === 'granted'\r\n        })\r\n    }, [])\r\n\r\n    const onClickUseCallBack = useCallback((id: string) => {\r\n        setSelectedItems((selectedItems) => {\r\n            const alreadySelected = selectedItems.indexOf(id) >= 0\r\n            if (selectedItems.length >= maxSelections && !alreadySelected)\r\n                return selectedItems\r\n            if (alreadySelected)\r\n                return selectedItems.filter((item) => item !== id)\r\n            else return [...selectedItems, id]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAssets()\r\n    }, [\r\n        assetsType,\r\n        permissions.hasMediaLibraryPermission,\r\n    ])\r\n\r\n    const getAssets = () => {\r\n        try {\r\n            if (availableOptions.hasNextPage) {\r\n                const params: AssetsOptions = {\r\n                    first: 200,\r\n                    mediaType: assetsType,\r\n                    sortBy: ['creationTime'],\r\n                }\r\n                if (availableOptions.after)\r\n                    params.after = availableOptions.after\r\n                if (!availableOptions.hasNextPage) return\r\n\r\n                return permissions.hasMediaLibraryPermission\r\n                    ? loadAssets(params)\r\n                    : getMediaLibraryPermission()\r\n            }\r\n        } catch (err) {\r\n            // need to add component that display where there is an error\r\n            // show it when any error happen and wrap any place that can have\r\n            // err with try and catch block\r\n        }\r\n    }\r\n\r\n    const resizeImages = async (\r\n        image: Asset,\r\n        manipulate: ManipulateOptions\r\n    ) => {\r\n        const { base64, width, height, saveTo, compress } = manipulate\r\n        const saveFormat =\r\n            saveTo === 'jpeg'\r\n                ? ImageManipulator.SaveFormat.JPEG\r\n                : ImageManipulator.SaveFormat.PNG\r\n\r\n        let sizeOptions: any = {}\r\n\r\n        if (width && !height) {\r\n            sizeOptions.width = width\r\n        }\r\n\r\n        if (height && !width) {\r\n            sizeOptions.height = height\r\n        }\r\n\r\n        if (width && height) {\r\n            sizeOptions.width = width\r\n            sizeOptions.height = height\r\n        }\r\n\r\n        if (!width && !height) {\r\n            sizeOptions.width = image.width\r\n            sizeOptions.height = image.height\r\n        }\r\n\r\n        const options = [\r\n            {\r\n                resize: sizeOptions,\r\n            },\r\n        ]\r\n        const format = {\r\n            base64,\r\n            compress,\r\n            format: saveFormat,\r\n        }\r\n        // todo add try and catch block\r\n        return await ImageManipulator.manipulateAsync(\r\n            image.uri,\r\n            options,\r\n            format\r\n        )\r\n    }\r\n\r\n    const prepareResponse = useCallback(\r\n        () =>\r\n            assetItems\r\n                .filter(\r\n                    (asset: { id: any }) =>\r\n                        selectedItems.indexOf(asset.id) !== -1\r\n                )\r\n                .sort(\r\n                    (a, b) =>\r\n                        selectedItems.indexOf(a.id) -\r\n                        selectedItems.indexOf(b.id)\r\n                ),\r\n        [selectedItems]\r\n    )\r\n\r\n    const manipulateResults = async (source: string) => {\r\n        setLoading(true)\r\n        const selectedAssets = prepareResponse()\r\n        try {\r\n            if (manipulate) {\r\n                let modAssets: ImageManipulator.ImageResult[] = []\r\n                await asyncForEach(selectedAssets, async (asset: Asset) => {\r\n                    if (asset.mediaType === 'photo') {\r\n                        const resizedImage = await resizeImages(\r\n                            asset,\r\n                            manipulate\r\n                        )\r\n                        modAssets.push(resizedImage)\r\n                    } else modAssets.push(asset)\r\n                })\r\n                return responseWithResults(source, modAssets)\r\n            }\r\n            return responseWithResults(source, selectedAssets)\r\n        } catch (err) {\r\n            return responseWithResults(source, selectedAssets)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const responseWithResults = (\r\n        navigation: string,\r\n        assets: Asset[] | ImageResult[]\r\n    ) => {\r\n        const _default = navigation === 'default'\r\n        return _default\r\n            ? defaultTopNavigator?.doneFunction(assets)\r\n            : CustomTopNavigator?.props.doneFunction(assets)\r\n    }\r\n\r\n    return (\r\n        <Screen bgColor={widgetBgColor}>\r\n            {CustomTopNavigator && CustomTopNavigator.Component && (\r\n                <CustomTopNavigator.Component\r\n                    {...CustomTopNavigator.props}\r\n                    onFinish={() => manipulateResults('custom')}\r\n                />\r\n            )}\r\n            {defaultTopNavigator && (\r\n                <DefaultTopNavigator\r\n                    selectedText={defaultTopNavigator.selectedText}\r\n                    buttonTextStyle={defaultTopNavigator.buttonTextStyle}\r\n                    buttonStyle={defaultTopNavigator.buttonStyle}\r\n                    midTextColor={defaultTopNavigator.midTextColor || 'black'}\r\n                    backText={defaultTopNavigator.goBackText}\r\n                    finishText={defaultTopNavigator.continueText}\r\n                    selected={selectedItems.length}\r\n                    backFunction={() => defaultTopNavigator.backFunction()}\r\n                    onFinish={() => manipulateResults('default')}\r\n                />\r\n            )}\r\n            {isLoading ? (\r\n                <Spinner color={spinnerColor} />\r\n            ) : (\r\n                <Widget widgetWidth={widgetWidth} bgColor={widgetBgColor}>\r\n                    <AssetsSelectorList\r\n                        cols={COLUMNS}\r\n                        margin={margin}\r\n                        data={assetItems}\r\n                        getMoreAssets={getAssets}\r\n                        onClick={onClickUseCallBack}\r\n                        selectedItems={selectedItems}\r\n                        screen={(width * widgetWidth) / 100}\r\n                        selectedIcon={selectedIcon}\r\n                        videoIcon={videoIcon}\r\n                        noAssets={noAssets}\r\n                    />\r\n                </Widget>\r\n            )}\r\n        </Screen>\r\n    )\r\n}\r\n\r\nasync function asyncForEach(array: Asset[], callback: any) {\r\n    for (let index = 0; index < array.length; index++) {\r\n        await callback(array[index], index, array)\r\n    }\r\n}\r\n\r\nconst SpinnerStyle = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n    horizontal: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        padding: 10,\r\n    },\r\n})\r\n\r\nconst Spinner: FC<{ color: string }> = ({ color }) => {\r\n    return (\r\n        <View style={[SpinnerStyle.container, SpinnerStyle.horizontal]}>\r\n            <ActivityIndicator size=\"large\" color={color} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst Screen = styled.View<IScreen>`\r\n    background-color: ${({ bgColor }) => bgColor};\r\n    flex: 1;\r\n`\r\n\r\nconst Widget = styled.View<IWidget>`\r\n    margin: 0 auto;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: ${({ bgColor }) => bgColor};\r\n    width: ${({ widgetWidth }) => widgetWidth || 100}%;\r\n    flex: 1;\r\n`\r\n\r\nexport default AssetsSelector\r\n"]},"metadata":{},"sourceType":"module"}